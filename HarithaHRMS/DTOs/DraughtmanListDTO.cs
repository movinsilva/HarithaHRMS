// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var draughtmaListDto = DraughtmaListDto.FromJson(jsonString);

namespace QuickType
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class DraughtmaListDto
    {
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("phoneNumber")]
        public string PhoneNumber { get; set; }

        [JsonProperty("manhourCount")]
        public long ManhourCount { get; set; }

        [JsonProperty("subLevelCount")]
        public long SubLevelCount { get; set; }
    }

    public partial class DraughtmaListDto
    {
        public static DraughtmaListDto[] FromJson(string json) => JsonConvert.DeserializeObject<DraughtmaListDto[]>(json, QuickType.Converter.Settings);
    }

    public static class SerializeDraughtmanList
    {
        public static string ToJson(this DraughtmaListDto[] self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
    }

    internal static class ConverterDraughtmanList
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
